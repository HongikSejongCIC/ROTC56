import java.awt.*;
import java.awt.event.*;
import java.io.*;
import javax.swing.*;

public class StudentActivity extends JFrame{
	StudentActivity(){
		setTitle("Student Chart");
		//setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		Container c = getContentPane();
		c.setLayout(new FlowLayout());
		JButton bu1 = new JButton("What's Eat?");
		JButton bu2 = new JButton("My Health?");
		JButton bu3 = new JButton("Favorite Site");
		JButton bu4 = new JButton("Note");
		bu1.addActionListener(new Action());
		c.add(bu1);
		bu2.addActionListener(new Action());
		c.add(bu2);
		bu3.addActionListener(new Action());
		c.add(bu3);
		bu4.addActionListener(new Action());
		c.add(bu4);

	setSize(300,300);
	setVisible(true);
	}
	public static void main(String args[]){
		new Login();
	}
}

class Eat extends JFrame{ //오늘 뭐 먹지 에 관한 내용
	Eat(){
		
	}
}
class Health extends JFrame{ // 자가진단에 관한 내용
	Health(){
		
	}
	
}
class FavoriteSite extends JFrame{ 
	JTextArea ta = new JTextArea(30,30);
	JTextField tf = new JTextField(20);
	FavoriteSite(){
		setTitle("FavoriteSite");
		//setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		Container c = getContentPane();
		c.setLayout(new BorderLayout(0,10));
		c.add(new JLabel("입력 후 <Enter> 키를 입력하세요"),BorderLayout.NORTH);
		c.add(new JScrollPane(ta),BorderLayout.SOUTH);
		c.add(tf,BorderLayout.CENTER);
		
		try {
			//FileOutputStream note = new FileOutputStream("note.txt");
			FileReader note1 = new FileReader("Favorite.txt");
			int c1;
			while((c1=note1.read())!=-1){
				char ccc = (char)c1;
				System.out.println(ccc);
				ta.append(Character.toString(ccc));
			}
			//note.close();
			note1.close();
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		tf.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e4){
				JTextField t1 = (JTextField)e4.getSource();
					ta.append(t1.getText()+"\n");
					try {
						FileOutputStream note = new FileOutputStream("Favorite.txt",true);
						note.write((t1.getText()+"\n").getBytes());
						note.close();
					} catch (FileNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					t1.setText("");
				}
		});
		setSize(1000,1000);
		setVisible(true);
	}
}
class Note extends JFrame{
	JTextArea ta = new JTextArea(30,30);
	JTextField tf = new JTextField(20);
	Note(){
		setTitle("Note");
		//setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		Container c = getContentPane();
		c.setLayout(new BorderLayout(0,10));
		c.add(new JLabel("입력 후 <Enter> 키를 입력하세요"),BorderLayout.NORTH);
		c.add(new JScrollPane(ta),BorderLayout.SOUTH);
		c.add(tf,BorderLayout.CENTER);
		try {
			//FileOutputStream note = new FileOutputStream("note.txt");
			FileReader note1 = new FileReader("note.txt");
			int c1;
			while((c1=note1.read())!=-1){
				char ccc = (char)c1;
				System.out.println(ccc);
				ta.append(Character.toString(ccc));
			}
			//note.close();
			note1.close();
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
		tf.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e4){
				JTextField t1 = (JTextField)e4.getSource();
					ta.append(t1.getText()+"\n");
					try {
						FileOutputStream note = new FileOutputStream("note.txt",true);
						note.write((t1.getText()+"\n").getBytes());
						note.close();
					} catch (FileNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					t1.setText("");
				}//~~~~~> 문제점: note.txt에 저장이 되서 불러와지긴 하나 캡슐화 필요
		});
		setSize(1000,1000);
		setVisible(true);
	}
}
class Login extends JFrame{
	Login(){
		setTitle("Login");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		Container c = getContentPane();
		c.setLayout(new FlowLayout());
		c.add(new Label("ID, PassWord"));
		c.add(new Label("로그인 하려면 enter하세요"));
		JTextField tf = new JTextField(20);
		c.add(tf);
		tf.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e3){
				JTextField t1 = (JTextField)e3.getSource();
					Check c = new Check();
					String shared = t1.getText();
					c.check(shared);
				}
		});
		JButton but1 = new JButton("Add");
		JButton but2 = new JButton("delete");
		but1.addActionListener(new Action());
		c.add(but1);
		but2.addActionListener(new Action());
		c.add(but2);
		
		setSize(300,300);
		setVisible(true);
	}
}
class Check{
	private String id;
	private String pw;
	static private int k=0;
	static private String[] IDPW = new String[100];
	public void add(String idpw){
		//System.out.print("data in\n");
		IDPW[k++]=idpw;
	}
	public void delete(String idpw){
		int a;
		for(a=0;a<k;a++){
			if(idpw.equals(IDPW[a])){
				IDPW[a]="0";	
			}
		}
	}
	public void check(String idpw){
		int i = 0;
		for(i=0;i<100;i++){	
		if(idpw.equals(IDPW[i])){
			new StudentActivity();
				}
			}
		}
}
class Action implements ActionListener{
	public void actionPerformed(ActionEvent e1) {
		JButton b = (JButton)e1.getSource();
		Check c = new Check();
		if(b.getText().equals("What's Eat?")){
			new Eat();
		}
		else if(b.getText().equals("My Health?")){
			new Health();
		}
		else if(b.getText().equals("Favorite Site")){
			new FavoriteSite();
		}
		else if(b.getText().equals("Note")){
			new Note();
		}
		else if(b.getText().equals("Add")){
			String name=JOptionPane.showInputDialog("구조:ID, PassWord");
			if(name!=null){
				c.add(name);
			}
		}
		else if(b.getText().equals("delete")){
			String name=JOptionPane.showInputDialog("구조:ID, PassWord");
			if(name!=null){
				c.delete(name);
			}
		}
	}
}
class Item implements ItemListener{
	public void itemStateChanged(ItemEvent e2) {
		if(e2.getStateChange()==ItemEvent.SELECTED){
			
			
		}
		
		
	}
}
